<div>
  <%= select_tag 'select-key', available_message_options(@setting, lang), id: 'key-selector' %>
  <span class='icon'><%= sprite_icon('help', l(:text_description_of_search_box)) %></span>
</div>
<br>
<div class='tabular'>
  <%= normal_mode_input_fields(@setting, lang) %>
</div>

<%= javascript_tag do %>
$(document).ready(function() {
  setSelect2();
});

// Fix a problem with focus not working in Redmine 5.0 or later.
// issue: https://github.com/select2/select2/issues/5993
$(document).on('select2:open', function() {
  document.querySelector('.select2-search__field').focus();
});

var currentSearchKeyword;
$('#key-selector').on('select2:select', function (e) {
  var key = e.params.data.id;
  var val = e.params.data.text;
  AddMessageInputField(key, val);
}).on('select2:closing', function (e) {
  currentSearchKeyword = $('.select2-search__field')[0].value;
}).on('select2:open', function (e) {
  setTimeout(function() {
    if (currentSearchKeyword){
      $('.select2-search__field').val(currentSearchKeyword).trigger('input');
    }
  }, 0);
});

function AddMessageInputField(key, val){
  if($('input[name="settings[custom_messages[' + key + ']]"]').length === 0){
    $('<p></p>').prependTo($('#edit-custom-messages .tabular'));
    $('<label>' + key + '</label><br>').appendTo($('#edit-custom-messages .tabular p:first'));
    $('<input>').attr({
      type: 'text',
      value: val.replace(/.*: /, ''),
      name: 'settings[custom_messages][' + key + ']'
    }).appendTo($('#edit-custom-messages .tabular p:first'));
    $('<a>').attr({
       class: 'icon clear-key-link',
       href: '#',
       onclick: '$(this).closest("p").remove(); return false;'
    }).html('<%= sprite_icon('del') %>').appendTo($('#edit-custom-messages .tabular p:first'));
    $('#key-selector').val('').change();
    $('#key-selector option[value="' + key + '"]').prop("disabled", true).change();
    setSelect2();
  }
}

function setSelect2(){
  $("#key-selector").select2({
    width: '100%',
    placeholder: '<%= l(:text_placeholder_choose_key) %>',
    templateResult: function(option) {
return $('<span class="key">' + option.id + ':</span> <span>' + option.text.replace(/.*: /, '') + '</span>');
    }
  });
}
<% end %>